digraph CFG {
0[label="Node Type: ENTRY_POINT 0
"];
0->1;
1[label="Node Type: EXPRESSION 1

EXPRESSION:
map[k] = sub(map[k],v)

IRs:
REF_0(uint256) -> map[k]
REF_1(uint256) -> map[k]
TMP_0(uint256) = INTERNAL_CALL, IntegerOverflowMappingSym1.sub(uint256,uint256)(REF_1,v)
REF_0(uint256) (->map) := TMP_0(uint256)"];
0[label="Node Type: ENTRY_POINT 0
"];
0->1;
1[label="Node Type: EXPRESSION 1

EXPRESSION:
require(bool)(b <= a)

IRs:
TMP_1(bool) = b <= a
TMP_2(None) = SOLIDITY_CALL require(bool)(TMP_1)"];
1->2;
2[label="Node Type: RETURN 2

EXPRESSION:
a - b

IRs:
TMP_3(uint256) = a - b
RETURN TMP_3"];
}
