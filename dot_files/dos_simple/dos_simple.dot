digraph CFG {
0[label="Node Type: ENTRY_POINT 0
"];
0->1;
1[label="Node Type: IF 1

EXPRESSION:
listAddresses.length < 1500

IRs:
REF_0 -> LENGTH listAddresses
TMP_0(bool) = REF_0 < 1500
CONDITION TMP_0"];
1->4[label="True"];
1->9[label="False"];
2[label="Node Type: BEGIN_LOOP 2
"];
2->5;
3[label="Node Type: END_LOOP 3
"];
3->8;
4[label="Node Type: NEW VARIABLE 4

EXPRESSION:
i = 0

IRs:
i(uint256) := 0(uint256)"];
4->2;
5[label="Node Type: IF_LOOP 5

EXPRESSION:
i < 350

IRs:
TMP_1(bool) = i < 350
CONDITION TMP_1"];
5->6[label="True"];
5->3[label="False"];
6[label="Node Type: EXPRESSION 6

EXPRESSION:
listAddresses.push(msg.sender)

IRs:
REF_2 -> LENGTH listAddresses
TMP_3(uint256) := REF_2(uint256)
TMP_4(uint256) = TMP_3 + 1
REF_2(uint256) (->listAddresses) := TMP_4(uint256)
REF_3(address) -> listAddresses[TMP_3]
REF_3(address) (->listAddresses) := msg.sender(address)"];
6->7;
7[label="Node Type: EXPRESSION 7

EXPRESSION:
i ++

IRs:
TMP_5(uint256) := i(uint256)
i(uint256) = i + 1"];
7->5;
8[label="Node Type: RETURN 8

EXPRESSION:
true

IRs:
RETURN True"];
9[label="Node Type: EXPRESSION 9

EXPRESSION:
listAddresses = new address[](0)

IRs:
TMP_7(address[])  = new address[](0)
listAddresses(address[]) = ['TMP_7(address[])']"];
9->10;
10[label="Node Type: RETURN 10

EXPRESSION:
false

IRs:
RETURN False"];
}
