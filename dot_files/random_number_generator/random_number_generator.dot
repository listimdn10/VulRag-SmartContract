digraph CFG {
0[label="Node Type: ENTRY_POINT 0
"];
0->1;
1[label="Node Type: NEW VARIABLE 1

EXPRESSION:
x = salt * 100 / max

IRs:
TMP_0(uint256) = salt * 100
TMP_1(uint256) = TMP_0 / max
x(uint256) := TMP_1(uint256)"];
1->2;
2[label="Node Type: NEW VARIABLE 2

EXPRESSION:
y = salt * block.number / (salt % 5)

IRs:
TMP_2(uint256) = salt * block.number
TMP_3(uint256) = salt % 5
TMP_4(uint256) = TMP_2 / TMP_3
y(uint256) := TMP_4(uint256)"];
2->3;
3[label="Node Type: NEW VARIABLE 3

EXPRESSION:
seed = block.number / 3 + (salt % 300) + y

IRs:
TMP_5(uint256) = block.number / 3
TMP_6(uint256) = salt % 300
TMP_7(uint256) = TMP_5 + TMP_6
TMP_8(uint256) = TMP_7 + y
seed(uint256) := TMP_8(uint256)"];
3->4;
4[label="Node Type: NEW VARIABLE 4

EXPRESSION:
h = uint256(blockhash(uint256)(seed))

IRs:
TMP_9(uint256) = SOLIDITY_CALL blockhash(uint256)(seed)
TMP_10 = CONVERT TMP_9 to uint256
h(uint256) := TMP_10(uint256)"];
4->5;
5[label="Node Type: RETURN 5

EXPRESSION:
uint256((h / x)) % max + 1

IRs:
TMP_11(uint256) = h / x
TMP_12 = CONVERT TMP_11 to uint256
TMP_13(uint256) = TMP_12 % max
TMP_14(uint256) = TMP_13 + 1
RETURN TMP_14"];
6[label="Node Type: RETURN 6

EXPRESSION:
result

IRs:
RETURN result"];
0[label="Node Type: OTHER_ENTRYPOINT 0

EXPRESSION:
salt = block.timestamp

IRs:
salt(uint256) := block.timestamp(uint256)"];
}
