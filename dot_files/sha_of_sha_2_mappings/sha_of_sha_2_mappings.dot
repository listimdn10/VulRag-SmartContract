digraph CFG {
0[label="Node Type: ENTRY_POINT 0
"];
0->1;
1[label="Node Type: EXPRESSION 1

EXPRESSION:
assert(bool)(n[keccak256()(abi.encode(BBB,a))] == 0)

IRs:
TMP_2(bytes) = SOLIDITY_CALL abi.encode()(BBB,a)
TMP_3(bytes32) = SOLIDITY_CALL keccak256()(TMP_2)
REF_3(uint256) -> n[TMP_3]
TMP_4(bool) = REF_3 == 0
TMP_5(None) = SOLIDITY_CALL assert(bool)(TMP_4)"];
0[label="Node Type: ENTRY_POINT 0
"];
0->1;
1[label="Node Type: EXPRESSION 1

EXPRESSION:
m[keccak256()(abi.encode(AAA,msg.sender))] = 100

IRs:
TMP_0(bytes) = SOLIDITY_CALL abi.encode()(AAA,msg.sender)
TMP_1(bytes32) = SOLIDITY_CALL keccak256()(TMP_0)
REF_1(uint256) -> m[TMP_1]
REF_1(uint256) (->m) := 100(uint256)"];
}
