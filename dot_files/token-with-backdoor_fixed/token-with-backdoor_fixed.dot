digraph CFG {
0[label="Node Type: ENTRY_POINT 0
"];
0->1;
1[label="Node Type: EXPRESSION 1

EXPRESSION:
balances[msg.sender] = 1000

IRs:
REF_0(uint256) -> balances[msg.sender]
REF_0(uint256) (->balances) := 1000(uint256)"];
0[label="Node Type: ENTRY_POINT 0
"];
0->1;
1[label="Node Type: EXPRESSION 1

EXPRESSION:
balances[msg.sender] += 1

IRs:
REF_3(uint256) -> balances[msg.sender]
REF_3(-> balances) = REF_3 + 1"];
0[label="Node Type: ENTRY_POINT 0
"];
0->1;
1[label="Node Type: EXPRESSION 1

EXPRESSION:
require(bool)(balances[msg.sender] > 0)

IRs:
REF_1(uint256) -> balances[msg.sender]
TMP_0(bool) = REF_1 > 0
TMP_1(None) = SOLIDITY_CALL require(bool)(TMP_0)"];
1->2;
2[label="Node Type: EXPRESSION 2

EXPRESSION:
balances[msg.sender] -= 1

IRs:
REF_2(uint256) -> balances[msg.sender]
REF_2(-> balances) = REF_2 - 1"];
0[label="Node Type: ENTRY_POINT 0
"];
0->1;
1[label="Node Type: EXPRESSION 1

EXPRESSION:
require(bool,string)(balances[msg.sender] <= 1000,Invariant violated)

IRs:
REF_4(uint256) -> balances[msg.sender]
TMP_2(bool) = REF_4 <= 1000
TMP_3(None) = SOLIDITY_CALL require(bool,string)(TMP_2,Invariant violated)"];
}
