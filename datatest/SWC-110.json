{
    "id": "SWC-110",
    "description": [
        "The Solidity assert() function is meant to assert invariants. Properly functioning code should never reach a failing assert statement. A reachable assertion can mean one of two things:"
    ],
    "assert_multitx_2.sol": "/*\n * @source: https://github.com/ConsenSys/evm-analyzer-benchmark-suite\n * @author: Suhabe Bugrara\n */\n\npragma solidity ^0.4.19;\n\ncontract AssertMultiTx2 {\n uint256 private param;\n\n function AssertMultiTx2(uint256 _param) public {\n param = 0;\n }\n\n function run() {\n assert(param > 0);\n }\n\n function set(uint256 _param) {\n param = _param;\n }\n\n\n}\n",
    "assert_multitx_2_fixed.sol": "/*\n * @source: https://github.com/ConsenSys/evm-analyzer-benchmark-suite\n * @author: Suhabe Bugrara\n */\n\npragma solidity ^0.4.19;\n\ncontract AssertMultiTx2 {\n uint256 private param;\n\n function AssertMultiTx2(uint256 _param) public {\n param = 0;\n }\n\n function run() public {\n require(param > 0);\n }\n\n function set(uint256 _param) public {\n param = _param;\n }\n\n}\n"

}