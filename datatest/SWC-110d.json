{
    "id": "SWC-110",
    "description": [
        "The Solidity assert() function is meant to assert invariants. Properly functioning code should never reach a failing assert statement. A reachable assertion can mean one of two things:"
    ],
    "assert_multitx_1.sol": "/*\n * @source: https://github.com/ConsenSys/evm-analyzer-benchmark-suite\n * @author: Suhabe Bugrara\n */\n\npragma solidity ^0.4.19;\n\ncontract AssertMultiTx1 {\n uint256 private param;\n\n function AssertMultiTx1(uint256 _param) public {\n require(_param > 0);\n param = _param;\n }\n\n function run() {\n assert(param > 0);\n }\n\n}\n",
    "assert_multitx_1_fixed.sol": "/*\n * @source: https://github.com/ConsenSys/evm-analyzer-benchmark-suite\n * @author: Suhabe Bugrara\n */\n\npragma solidity ^0.4.19;\n\ncontract AssertMultiTx1 {\n    uint256 private param;\n\n    function AssertMultiTx1(uint256 _param) public {\n        require(_param > 0);\n        param = _param;\n    }\n\n    function run() public {\n        require(param > 0);\n    }\n}\n"
    }